name: RGBD
gpu_ids:  [0,1] #[1] #

train_step: 'main_RealSenseII_VIPLMumoFace3K_step1'  
########################################################################
dataroot:  '../dataset/'  

model: modelRGBD
dataset_ids: [23002] # [1,2,3]  
source_dataset_ids: [3001]
test_dataset_ids: [23002] # [1,2,3]  
test_source_dataset_ids: [3001]

aug: True
########################################################################
recog_state_dict:
    name:  ResNet50Backbone.pth
    loc: 'pretrained_model/ResNet50Backbone.pth'
    type: resnet50 #resnet50
    rgb2bgr: True #False
    to255: True
    sub: [91.4953, 103.8827, 131.0912]
    only_first: False
    part: backbone
    policy: split
    input_dim: 3

recog_state_dict_rgb_for_fusion:
    name:  ResNet50Backbone.pth
    loc: 'pretrained_model/ResNet50Backbone.pth'
    type: resnet50 #resnet50
    rgb2bgr: True #False
    to255: True
    sub: [91.4953, 103.8827, 131.0912]
    only_first: False
    part: backbone
    #policy: split
    input_dim: 3

########################################################################
results_dir: './results/'

debug:
  num_per_row: 16
#######################################################################

########################################################################
checkpoints_dir:  './checkpoints' #models are saved here

save_epoch_freq: 1 #frequency of saving checkpoints at the end of epochs

test_fre: 1

pool_size: 10

########################################################################

D_source: True
D_target: True

#kernel_simga: 0.1

####################data_type#################################################
resize224: False
dim_Y: 1                              # number of image channels [1/3]
dim_X: 3                              # number of image channels [1/3]
img_size: 224
tsf_type: 1    #  [-1,1]
##############################################################################

########################################################################
start_epoch: 0 
max_epoch: 1 #1

############################continue train setting#########################
which_epoch:  start #21 #10 #
continue_train:  False #True #True #
########################################################################

optimizer_G:
  lr:   [0.0002]         #
  lr_policy:  lambda2
  niter: 2
  niter_decay: 2

optimizer_C:
  lr:  [0.0001,0.00001]
  lr_policy: origin  #step  # #
  #gamma: 1
  #step_size: 1

beta1: 0.5                    # Adam parameter

batchSize: 32 #32 #192
testbatchSize: 32 #32 #192
pool_size: 10   #the size of image buffer that stores previously generated images
num_workers: 6

#################################################################

#####lambda#################################

lambda_GAN: 1
lambda_D: 1

lambda_FFL: 1 #1

lambda_cls: 1

lambda_L1: 100  #100 #100

################################################

gen:
  dim: 64                     
  activ: relu                 # activation function [relu/lrelu/prelu/selu/tanh]
  n_downsample: 2             # number of downsampling layers in content encoder
  n_res: 4                    # number of residual blocks in content encoder/decoder
  pad_type: reflect           # padding type [zero/reflect]
  init: kaiming                 # initialization [gaussian/kaiming/xavier/orthogonal]
  en_norm: in
  de_norm: bn

dis:
  dim: 64                     
  norm: none                  # normalization layer [none/bn/in/ln]
  activ: lrelu                # activation function [relu/lrelu/prelu/selu/tanh]
  n_layer: 4                  # number of layers in D
  gan_type: lsgan             # GAN loss [lsgan/vanilla]
  num_scales: 3               # number of scales
  pad_type: reflect           # padding type [zero/reflect]
  init: kaiming                 # initialization [gaussian/kaiming/xavier/orthogonal]

finetune:
  init: xavier
